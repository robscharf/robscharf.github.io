<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TryHackMe on Hi, I&#39;m Rob.</title>
    <link>https://robscharf.github.io/categories/tryhackme/</link>
    <description>Recent content in TryHackMe on Hi, I&#39;m Rob.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Tue, 03 May 2022 00:00:00 +0000</lastBuildDate><atom:link href="https://robscharf.github.io/categories/tryhackme/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>THM: Mr Robot CTF -- Write-Up</title>
      <link>https://robscharf.github.io/posts/2022/05/thm-mr-robot-ctf--write-up/</link>
      <pubDate>Tue, 03 May 2022 00:00:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/05/thm-mr-robot-ctf--write-up/</guid>
      <description>About TryHackMe.com&amp;rsquo;s Mr Robot CTF (MRCTF) is a beginner-friendly capture-the-flag virtual machine by Leon Johnson. MRCTF is named after, and inspired by, the Mr. Robot television show and challenges users to capture three flags by finding vulnerabilities in the target server and exploiting them to gain root access.
Note My instance of MRCTF was at IP address &amp;lt;target-ip&amp;gt;, though yours will vary. I have replaced all instances of this address with &amp;lt;target-ip&amp;gt; in the walkthrough portion of this write-up.</description>
    </item>
    
    <item>
      <title>Finishing the OWASP Juice Shop</title>
      <link>https://robscharf.github.io/posts/2022/04/finishing-the-owasp-juice-shop/</link>
      <pubDate>Mon, 25 Apr 2022 00:00:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/04/finishing-the-owasp-juice-shop/</guid>
      <description>Wrapping up my intro to the Juice Shop Today I finished up the OWASP Juice Shop Room on THM, after leaving the final Cross-site Scripting (XSS) modules unfinished last week. This involved quick introductory examples of three XSS modalities:
   DOM Persistent (Server-side) Reflected (Client-side)     DOM XSS uses the HTML environment to execute malicious JavaScript. This type of attack commonly uses the &amp;lt;script&amp;gt; HTML tag.</description>
    </item>
    
  </channel>
</rss>

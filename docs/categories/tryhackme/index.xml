<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>TryHackMe on Hi, I&#39;m Rob.</title>
    <link>https://robscharf.github.io/categories/tryhackme/</link>
    <description>Recent content in TryHackMe on Hi, I&#39;m Rob.</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <copyright>&lt;a href=&#34;https://creativecommons.org/licenses/by-nc/4.0/&#34; target=&#34;_blank&#34; rel=&#34;noopener&#34;&gt;CC BY-NC 4.0&lt;/a&gt;</copyright>
    <lastBuildDate>Fri, 08 Jul 2022 13:04:00 +0000</lastBuildDate><atom:link href="https://robscharf.github.io/categories/tryhackme/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>THM: Biblioteca -- Write-Up</title>
      <link>https://robscharf.github.io/posts/2022/07/thm-biblioteca--write-up/</link>
      <pubDate>Fri, 08 Jul 2022 13:04:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/07/thm-biblioteca--write-up/</guid>
      <description>About Biblioteca is a medium rated CTF room on TryHackMe. Rooting this box involves carrying out a successful SQL injection to obtain a foothold, identifying an opportunity for a &amp;ldquo;lateral privilege escalation&amp;rdquo; via brute-force attack, and further escalation to root via Python library hijacking.
Note: I have replaced all instances of the virtual machine&amp;rsquo;s ip address with &amp;lt;target-ip&amp;gt; throughout this write-up.
Enumeration nmap I began by running a standard nmap scan against the target host.</description>
    </item>
    
    <item>
      <title>THM: Agent Sudo -- Write-Up</title>
      <link>https://robscharf.github.io/posts/2022/05/thm-agent-sudo--write-up/</link>
      <pubDate>Mon, 23 May 2022 14:14:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/05/thm-agent-sudo--write-up/</guid>
      <description>About TryHackMe.com&amp;rsquo;s Agent Sudo is a beginner-friendly capture-the-flag virtual machine by DesKel. Agent Sudo has a secret agent theme and challenges users to capture two flags and gain root access by locating and decrypting a series of confidential communications.
Note I have replaced all instances of the virtual machine&amp;rsquo;s ip address with &amp;lt;target-ip&amp;gt; throughout this write-up.
Methodology We begin our enumeration efforts by running an nmap scan on the target machine to understand the ports that are open to network traffic.</description>
    </item>
    
    <item>
      <title>THM: Mr Robot CTF -- Write-Up</title>
      <link>https://robscharf.github.io/posts/2022/05/thm-mr-robot-ctf--write-up/</link>
      <pubDate>Tue, 10 May 2022 23:14:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/05/thm-mr-robot-ctf--write-up/</guid>
      <description>About TryHackMe.com&amp;rsquo;s Mr Robot CTF (MRCTF) is a beginner-friendly capture-the-flag virtual machine by Leon Johnson. MRCTF is named after, and inspired by, the Mr. Robot television show and challenges users to capture three flags by finding vulnerabilities in the target server and exploiting them to gain root access.
Note I have replaced all instances of the virtual machine&amp;rsquo;s ip address with &amp;lt;target-ip&amp;gt; throughout this write-up.
Methodology We begin our enumeration efforts by running an nmap scan on the target machine to understand the ports that are open to network traffic.</description>
    </item>
    
    <item>
      <title>THM: Upload Vulnerabilities -- Write-Up</title>
      <link>https://robscharf.github.io/posts/2022/04/thm-upload-vulnerabilities--write-up/</link>
      <pubDate>Thu, 28 Apr 2022 11:30:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/04/thm-upload-vulnerabilities--write-up/</guid>
      <description>Welcome to my write-up of the Upload Vulnerabilities room on TryHackMe, created by MuirlandOracle. Let&amp;rsquo;s jump in.
Note: The Complete Beginner THM skill path is now considered depricated in favor of the Jr Penetration Tester path.
Task 1 - Getting Started The room begins with a necessary configuration step. The hosts file of the attacking machine needs to be modified to include the following line:
&amp;lt;machine-ip&amp;gt; overwrite.uploadvulns.thm shell.uploadvulns.thm java.uploadvulns.thm annex.uploadvulns.thm magic.</description>
    </item>
    
    <item>
      <title>Finishing the OWASP Juice Shop</title>
      <link>https://robscharf.github.io/posts/2022/04/finishing-the-owasp-juice-shop/</link>
      <pubDate>Mon, 25 Apr 2022 14:20:00 +0000</pubDate>
      
      <guid>https://robscharf.github.io/posts/2022/04/finishing-the-owasp-juice-shop/</guid>
      <description>Wrapping up my intro to the Juice Shop Today I finished up the OWASP Juice Shop Room on THM, after leaving the final Cross-site Scripting (XSS) modules unfinished last week. This involved quick introductory examples of three XSS modalities:
DOM Persistent (Server-side) Reflected (Client-side) DOM XSS uses the HTML environment to execute malicious JavaScript. This type of attack commonly uses the &amp;lt;script&amp;gt; HTML tag. Persistent XSS is JavaScript that is run when the server loads the page containing it.</description>
    </item>
    
  </channel>
</rss>
